version: "3.9"

services:
  nginx:
    build: ./nginx
    hostname: nginx_comunidad
    # command: set -xe; python manage.py migrate --noinput; gunicorn project_conf.wsgi:application
    volumes:
      - ./static:/code/static
      - ./media:/code/media
    restart: always
    ports:
      - "81:80"
    networks:
      - backend

  web_pro:
    hostname: comunidad-web-pro
    container_name: comunidad-web-pro
    build: .
    env_file: .env
    volumes:
      - .:/app
    expose:
      - 8000
    depends_on:
      - db_pro
    networks:
      - backend

  # redis:
  #   image: "redis:alpine"
  #   networks:
  #     - backend

  # celery_worker:
  #   build: .
  #   command: celery -A project_conf worker -l INFO
  #   env_file: .env
  #   volumes:
  #     - .:/usr/src/app
  #   depends_on:
  #     - web_pro
  #     - redis
  #   networks:
  #     - backend

  # celery_beat:
  #   build: .
  #   command: celery -A project_conf beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
  #   env_file: .env
  #   volumes:
  #     - .:/usr/src/app
  #   depends_on:
  #     - web_pro
  #     - redis
  #     - celery_worker
  #     - db_pro
  #   networks:
  #     - backend

  db_pro:
    hostname: comunidad-db-pro
    container_name: comunidad-db-pro
    image: postgres
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      PGDATA: /var/lib/postgresql/data
    volumes:
      - db-data-pro:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend

volumes:
  db-data-pro:
networks:
  # soporte_catedu_aragon_frontend:
  #   external: true
  backend:
    driver: bridge
